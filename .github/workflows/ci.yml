name: CI

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  # linux:
# 
    # runs-on: ubuntu-latest
# 
    # steps:
      # - uses: actions/checkout@v2
# 
      # - name: Install dependencies
        # run: sudo apt-get install -y libasound2-dev libsndfile-dev
# 
      # - name: Cache Cargo
        # uses: actions/cache@v2
        # with:
          # path: |
            # ~/.cargo/registry
            # ~/.cargo/git
            # target
          # key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
# 
      # - name: Build 
        # run: cargo build
# 
      # - name: Test
        # run: cargo test

  # macos:
# 
    # runs-on: macos-latest
# 
    # steps:
      # - uses: actions/checkout@v2
# 
      # - name: Install dependencies
        # run: brew install libsndfile
# 
      # - name: Cache Cargo
        # uses: actions/cache@v2
        # with:
          # path: |
            # ~/.cargo/registry
            # ~/.cargo/git
            # target
          # key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
# 
      # - name: Build 
        # run: cargo build
# 
      # - name: Test
        # run: cargo test

  windows:

    runs-on: windows-latest
    env:
      LLVM_PATH: C:/temp/llvm

    steps:
      - uses: actions/checkout@v2

      - name: Cache LLVM and Clang 
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: ${{ env.LLVM_PATH }}
          key: llvm-11.0

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "11.0"
          directory: ${{ env.LLVM_PATH }}
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - name: Install dependencies
        run: choco install -y libsndfile

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: msys2/setup-msys2@v2
        with: 
          msystem: MINGW64
          install: base-devel curl gcc mingw-w64-x86_64-toolchain
          update: true

      - name: Build
        shell: msys2 {0}
        env: 
          CPLUS_INCLUDE_PATH: C:\Program Files\libsndfile\include
          LIBSNDFILE_PATH: C:/Program Files/libsndfile/lib
          LIBCLANG_PATH: ${{ env.LLVM_PATH }}/lib
          LLVM_CONFIG_PATH: ${{ env.LLVM_PATH }}/bin/llvm-config
        run: |
          # $Env:Path+=";C:\msys64\mingw64\bin;\
                      # C:\msys64\mingw64\lib;\
                      # C:\msys64\mingw64\include;\
                      # C:\msys64\mingw64\x86_64-w64-mingw32\bin;\
                      # C:\msys64\mingw64\x86_64-w64-mingw32\lib;\
                      # C:\msys64\mingw64\x86_64-w64-mingw32\include"
          # export PATH="/c/msys64/mingw64/bin:\
                       # /c/msys64/mingw64/lib:\
                       # /c/msys64/mingw64/include:\
                       # /c/msys64/mingw64/x86_64-w64-mingw32/bin:\
                       # /c/msys64/mingw64/x86_64-w64-mingw32/lib:\
                       # /c/msys64/mingw64/x86_64-w64-mingw32/include:\
                       # $PATH"
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -- -y
          rustup target add x86_64-pc-windows-gnu
          rustup toolchain install stable-x86_64-pc-windows-gnu
          cargo build --target x86_64-pc-windows-gnu

      # - name: Test
        # env: 
          # CPLUS_INCLUDE_PATH: C:\Program Files\libsndfile\include;C:\msys64\mingw64\include
          # LIBSNDFILE_PATH: C:/Program Files/libsndfile/lib
          # LIBCLANG_PATH: ${{ env.LLVM_PATH }}/lib
          # LLVM_CONFIG_PATH: ${{ env.LLVM_PATH }}/bin/llvm-config
        # run: |
          # $Env:PATH+=";C:\msys64\mingw64\bin;C:\msys64\mingw64\lib;C:\msys64\mingw64\x86_64-w64-mingw32\bin;C:\msys64\mingw64\x86_64-w64-mingw32\lib"
          # rustup target add x86_64-pc-windows-gnu
          # rustup toolchain install stable-x86_64-pc-windows-gnu
          # cargo test --target x86_64-pc-windows-gnu
